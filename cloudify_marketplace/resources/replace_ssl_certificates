#! /usr/bin/env python
import json
import os
import shutil
import subprocess
import time

from cloudify_rest_client import CloudifyClient
from cloudify_cli.utils import get_auth_header

target_file = '/tmp/cloudify_ssl_certificate_replacement.json'


if __name__ == '__main__':
    if os.path.isfile(target_file):
        # Even if the writing is for some reason partially complete,
        # we'll be re-running in at most 1 minute anyway
        with open(target_file) as target_file_handle:
            details = json.load(target_file_handle)
        # We're done, we don't need the details file any more
        # Remove the file now in case we take more than a minute to run
        os.unlink(target_file)

        execution_id = details['execution_id']
        auth_header = get_auth_header(
            username=details['cloudify_username'],
            password=details['cloudify_password'],
        )
        cert_path = '/root/cloudify/server.crt'

        c = CloudifyClient(
            headers=auth_header,
            cert=cert_path,
            trust_all=False,
            port=443,
            protocol='https',
        )

        while c.executions.get(execution_id)['status'] != 'terminated':
            time.sleep(0.5)

        # Stop services
        for service in details['restart_services']:
            subprocess.call(['service', service, 'stop'])

        # Replace certs
        for temp_cert, destination in details['new_certs']:
            shutil.copyfile(temp_cert, destination)

        # Also update the cert in the provider context
        with open(cert_path) as cert_handle:
            public_cert = cert_handle.read()
        name = c.manager.get_context()['name']
        context = c.manager.get_context()['context']
        context['cloudify']['cloudify_agent']['broker_ssl_cert'] = public_cert
        c.manager.update_context(name, context)

        # Start services
        for service in details['restart_services']:
            subprocess.call(['service', service, 'start'])

        # Clean up temporary certificates
        for temp_cert, _ in details['new_certs']:
            try:
                os.unlink(temp_cert)
            except OSError:
                # Already deleted this temp cert
                pass

        # And we can stop running, too
        os.unlink('/etc/cron.d/replace_cloudify_ssl_certificates')
